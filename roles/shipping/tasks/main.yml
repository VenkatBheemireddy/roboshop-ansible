- name: Install maven
  ansible.builtin.dnf:
    name: maven
    state: installed

- name: Create application user
  ansible.builtin.user:
    name: roboshop

- name: Remove application directory
  ansible.builtin.file:
    path: /app
    state: absent

- name: Create application directory
  ansible.builtin.file:
    path: /app
    state: directory

- name: Download and extract app content
  ansible.builtin.unarchive:
    src: https://roboshop-artifacts.s3.amazonaws.com/shipping-v3.zip
    dest: /app
    remote_src: yes

- name: Install Maven dependencies
  ansible.builtin.shell: mvn clean package ; mv target/shipping-1.0.jar shipping.jar
  args:
    chdir: /app

#- name: Install dependencies
#  community.general.npm:
#    path: /app

- name: Setup systemD service file
  ansible.builtin.template:
    src: shipping.service
    dest: /etc/systemd/system/shipping.service

- name: Enable and start application with daemon
  ansible.builtin.systemd_service:
    name: shipping
    enabled: true
    state: started
    daemon_reload: true

- name: Install MySQL Client
  ansible.builtin.dnf:
    name:
      - mysql
      - python3-mysqlclient
    state: installed

#- name: Load Schema
#  ansible.builtin.shell: mysql -h mysql.azdevopsv82.online -uroot -pRoboShop@1 </app/db/schema.sql
#
#- name: app-user
#  ansible.builtin.shell: mysql -h mysql.azdevopsv82.online -uroot -pRoboShop@1 </app/db/app-user.sql
#
#- name: master-data
#  ansible.builtin.shell: mysql -h mysql.azdevopsv82.online -uroot -pRoboShop@1 </app/db/master-data.sql

- name: Load Schema, App user and Master data
  ansible.builtin.shell: mysql -h mysql-{{ ENV }}.azdevopsv82.online -uroot -p{{ lookup('community.hashi_vault.hashi_vault', 'secret=roboshop-{{ ENV }}/shipping:MYSQL_ROOT_PASSWORD token={{ vault_token }} url=http://vault-internal.azdevopsv82.online:8200') }} </app/db/{{ item }}.sql
  loop:
    - schema
    - app-user
    - master-data

